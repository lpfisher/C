pointers are variables used for several reasons:

*Strings
*Dynamic memory allocation
*Sending function arguments by reference
*Building complex data structures
*Pointing to functions
*Building special data structures

Essentially, pointers are a simple integer variable that holds a memory address, instead of the value itself.

A computer's memory is a sequential store of data and a pointer points to a specific part of the memory. The programs you write can use pointing in such a way that it points to a large amount of memory

Strings as pointers -

char * name = "John"

This does three things:
1.Allocates a local variable called "name" which is a pointer to a single character
2.Causes a string "John" to be written somewhere in the program memory after the program is compiled and executed
3.Initializes the name argument to point to where the J character resides (and likewise for the rest of the string in memory)

If you try to access the 'name' variable as an array, it will work and return the ordinal value 'j' sinc ethe name variable actually points to the beginning of the string.

--Dereferencing--

The act of referring to where the pointer points, instead of its memory address, is Dereferencing. We actually already do this with arrays, by using the [0] operator to access the first item of the array. Since arrays are actually just pointers, accessing the first item in an array is the same as Dereferencing a pointer. This is done using the asterisk operator (*)

To create an array that points to a different variable in the stack, you can use the following code:
